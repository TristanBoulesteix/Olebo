[versions]
compose = "1.6.0"
junit = "4.13.2"
kotlin = "1.9.22"
ktor = "2.3.7"
logback = "1.4.14"
exposed = "0.47.0"
sqlite = "3.45.1.0"
kodein = "7.21.2"
slf4j = "2.0.0-alpha7"
serialization = "1.6.3"
coroutines = "1.8.0"
mock = "1.9.22-1.4.0"
kover = "0.7.6"

[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
ktor-server-tests = { module = "io.ktor:ktor-server-tests-jvm", version.ref = "ktor" }
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
jdbc-sqlite = { module = "org.xerial:sqlite-jdbc", version.ref = "sqlite" }
kodein = { module = "org.kodein.di:kodein-di", version.ref = "kodein" }
kodein-compose = { module = "org.kodein.di:kodein-di-framework-compose", version.ref = "kodein" }
kodein-ktor = { module = "org.kodein.di:kodein-di-framework-ktor-server", version.ref = "kodein" }
slf4j = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
kotlinx-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

[plugins]
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
mock = { id = "dev.mokkery", version.ref = "mock" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }